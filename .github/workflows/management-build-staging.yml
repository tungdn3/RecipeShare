# This is a basic workflow to help you get started with Actions

name: Management - Build and push the latest build to staging

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
    paths:
      - 'RecipeShare/Management'
  
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_push_image:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3.0.0
      
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
                  
      - name: Build and push staging images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@1a162644f9a7e87d8f4b053101d1d9a712edc18c
        uses: docker/build-push-action@v6.3.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: .
          # Path to the Dockerfile
          file: Management/Management.API/Dockerfile
          # Push is a shorthand for --output=type=registry
          push: true
          # List of tags
          tags: ${{secrets.DOCKERHUB_USERNAME}}/recipeshare-management-api:latest

  deploy:
    runs-on: ubuntu-20.04
    needs: build_push_image # Will wait for the execution of the previous job
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout

    steps:
      - uses: actions/checkout@v2
      
      - name: Install Helm
        uses: Azure/setup-helm@v1
        with:
          version: v3.3.1

      - name: Sign in to Azure with OIDC
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # client-id: ${{ secrets.AZURE_CLIENT_ID }}
          # tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          # subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          cluster-name: ${{ secrets.CLUSTER_NAME }}
      
      - name: Run Helm Deploy
        run: |
          helm upgrade \
            --install \
            --create-namespace \
            --atomic \
            --wait \
            --namespace staging \
            recipe-share \
            ./k8s/recipe-share
